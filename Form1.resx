<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxGalge.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKoAAADNCAYAAAAoh+tgAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAy9JREFUeF7t28FtWkEARVFKcCkugRJcgkuhBEpxCZTgEijBHRBNZEWR+ZvEM9G/
        4RzpSchezXCFPgsONwgQKglCJUGoJOwu1MvlYpN3vV4/b7drF6F+fHzcnp6ebofDwRbudDp93njPLkJ9
        fX3dvFibv+qn6y5CPR6Pm5dq8zceBYqE+mAT6jcI9d9NqN+wFerz8/Ovb6325zufz3d3Ojb+V7TbUMff
        +HsjyK93OibUbxDqfEJdQKjzCXUBoc4n1AWEOp9QFxDqfEJdQKjzCXUBoc4n1AWEOp9QFxDqfEJdQKjz
        CXUBoc4n1AWEOp9QFxDqfEJdQKjzCXUBoc4n1AWEOp9QFxDqfEJdQKjzCXUBoc4n1AWEOp9QFxDqfEJd
        QKhrfL3TsfEz6iKhkiBUEoRKglBJECoJQiVBqCQIlQShkiBUEoRKglBJECoJQiVBqCQIlQShkiBUEoRK
        glBJECoJQiVBqCQIlQShkiBUEoRKglBJECoJQiVBqCQIlQShkiBUEoRKglBJECoJQiVBqCQIlQShkiBU
        EoRKglBJECoJQiVBqCQIlQShkiBUEoRKglBJECoJQiVBqCQIlQShkiBUEoRKglBJECoJQiVBqCQIlQSh
        kiBUEoRKglBJECoJQiVBqCQIlQShkiBUEoRKglBJECoJQiVBqCQIlQShkiBUEoRKglBJEOok1+v18xUr
        CJUEoZIgVBKESoJQSRAqCUIlQagkCJUEoZIgVBKESoJQSRAqCUIlQagkCJUEoZIgVBKESoJQSRAqCUIl
        QagkCJUEoZIgVBKESoJQSRAqCUIlQagkCJUEoZIgVBKESoJQSRAqCUIlQagkCJUEoZIgVBKESoJQSRAq
        CUIlQagkCJUEoZIgVBKESoJQSRAqCUIlQagkCJUEoZIgVBKESoJQSRAqCUIlQagkCJUEoZIgVBKESoJQ
        SRAqCUIlQagkCJUEoZIgVBI2Q315edmM53/dOOs4M/t1F+rpdNp8Mx9h4+zs012oj/RJ+nUeN/ZLqL9N
        qPt1F+rb29vmm/gIG2dnnza/TL2/v/98XnukjTOzX5uhwt4IlQShkiBUEoRKwO32AyKWZN5krhCoAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAB26LPQdsij0HbYo9B22LPQdtij0HbIo9B22KPQtkfT0JaoY9B26LPQdtiz0Hbow9B2+NPQdu
        jD0HbYo9B3KRPQ2l0PUOuer1D7fo9Q+25fUPuOj1D7jp9Q+16PUbmLr1HZq79RC35vUQteX1D7Pi9RCv
        3PUPs+H1Drfn9Q2eyPUZkK7/F67V/yCfwP8jkq7/J5K6/x2Oxv8dhrj/IIOt/yt4j/8uk67/LJu3/x+a
        uf8fjaj/HJ2+/xWw2f8Wi6n/IHOF/x2Qrf8hoML/KnaS/yB9pf8ej67/H5Cs/xyUs/8je5D/Lml7/zF/
        k/8gpsn/I4mh/x6auf8cmbn/F4ai/x1+lf8anb//G5nO/xqayP8Ut+L/GqPG/xO45v8WrdX/HZaz/yR6
        jP8meJL/GrLf/xqx2v8Vu+r/GazU/xGiyv8UpMv/FLzr/xG18P8Oxv3/D7/y/w+56/8Pw/b/Dsv//w/F
        9/8Tt+P/FLHg/xDB+P8Ny///Dsr//w7M//8Msd//DLbm/w7L//8Oyv//Dsn//w+05P8QmMD/ELnp/xKv
        3P8RuOj/ErTj/w7L//8Oyf//Dsn//w7J//8Oyv//DLDf/w215v8Oyv//Dsn//w7J//8OxPj/D6rV/w7J
        /v8Ssd//FZvB/w/C9v8Oyf//Dsn//w7J//8Oyf//Dsr//wyw3/8Nteb/Dsr//w7J//8Oyf//DsP4/w+p
        1f8Oyf7/Ea7b/xKTuP8PwfT/Dsn//w7J//8Oyf//Dsn//w7K//8MsN//DbXm/w7K//8Oyf//Dsn//w7D
        +P8PqdX/Dsn//xGu2/8TkbX/EL/y/w7K//8Oyf//Dsn//w7J//8Oyv//DLDf/w215v8Oyv//Dsn//w7J
        //8Ow/j/D6nV/w7H/P8Tp9H/E63Z/xKx3/8Oyv//Dsn//w7J//8Oyf//Dsr//wyw3/8Ntub/Dsv//w7K
        //8Oyv//DsT4/w+q1f8Oyv//Eq/b/xWdxP8RvO3/Dsv//w7K//8Oyv//Dsr//w7L//8Msd//DKfU7w28
        7u8Nu+3vDbvt7w236O8NkrjvC5zF7wyYv+8Tl73vDbzu7w277e8Nu+3vDbvt7w277e8NvO7vC6TP7whu
        izIIdJMyCHSTMgh0kzIIdJMyB111MgVQZTIGUWYyCGaBMgh1lDIIdJMyCHSTMgh0kzIIdJMyCHSTMghx
        jzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAA==
</value>
  </data>
</root>